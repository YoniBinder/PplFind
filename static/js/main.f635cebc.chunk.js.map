{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","components/FavoritesList/style.js","components/FavoritesList/FavoritesList.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","hooks/useFavPeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","event","target","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","useState","clickedUserId","setClickedUserId","hoveredUserId","setHoveredUserId","usersList","setUsersList","countries","setCountries","useEffect","newUserList","i","length","j","location","country","push","handleMouseLeave","filterList","idx","findIndex","newList","map","user","index","onMouseEnter","handleMouseEnter","onMouseLeave","onClick","clicked","favoriteList","JSON","parse","localStorage","getItem","includes","filter","click","setItem","stringify","handleFavorite","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","Home","Content","Header","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","usePeopleFetch","FavoritesList","favUsers","favUsersList","setFavUsersList","newFavList","splice","removeFavorite","Favorites","setFavUsers","fetchFavUsers","useFavPeopleFetch","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","component","Link","to","AppRouter","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f635cebc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = (event) => {\r\n    onChange && onChange(value,event.target.checked);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserList = ({ users, isLoading }) => {\r\n  const [clickedUserId, setClickedUserId] = useState([]);\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [countries, setCountries] = useState([\r\n    { value: \"BR\", label: \"Brazil\", isChecked: false },\r\n    { value: \"AU\", label: \"Australia\", isChecked: false },\r\n    { value: \"CA\", label: \"Canada\", isChecked: false },\r\n    { value: \"DE\", label: \"Germany\", isChecked: false },\r\n    { value: \"SP\", label: \"Spain\", isChecked: false },\r\n  ]);\r\n\r\n  // get users\r\n  useEffect(() => {\r\n    setUsersList(users);\r\n  }, [users]);\r\n\r\n  //list filter\r\n  useEffect(() => {\r\n    let newUserList = [];\r\n\r\n    for (let i = 0; i < users.length; i++)\r\n      for (let j = 0; j < countries.length; j++)\r\n        if (\r\n          countries[j].isChecked === true &&\r\n          users[i].location.country === countries[j].label\r\n        ) {\r\n          newUserList.push(users[i]);\r\n          break;\r\n        }\r\n    if (newUserList.length !== 0) setUsersList(newUserList);\r\n    else setUsersList(users);\r\n  }, [countries]);\r\n\r\n  //favorites\r\n  function handleFavorite(index) {\r\n    let clicked = [...clickedUserId];\r\n    let favoriteList = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n    \r\n    if (!clickedUserId.includes(index)) {\r\n      favoriteList.push(usersList[index]);\r\n      clicked.push(index);\r\n    } else {\r\n      favoriteList = usersList.filter((user) => {\r\n        user !== usersList[index];\r\n      });\r\n      clicked = clickedUserId.filter((click) => {\r\n        click !== index;\r\n      });\r\n    }\r\n    setClickedUserId(clicked);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favoriteList));\r\n  }\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  function filterList(value, isChecked) {\r\n    let idx = countries.findIndex((country) => country[\"value\"] === value);\r\n    let newList = [...countries];\r\n    newList[idx].isChecked = isChecked;\r\n    setCountries(newList);\r\n  }\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        {countries.map((country, idx) => {\r\n          return (\r\n            <CheckBox\r\n              key={idx}\r\n              isChecked={country.isChecked}\r\n              onChange={filterList}\r\n              value={country.value}\r\n              label={country.label}\r\n            />\r\n          );\r\n        })}\r\n      </S.Filters>\r\n      <S.List>\r\n        {usersList.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n              onClick={(event) => handleFavorite(index, event)}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper\r\n                isVisible={index === hoveredUserId || clickedUserId.includes(index)}\r\n              >\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n \r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading}/>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst FavoritesList = ({favUsers}) => {\r\n\r\n\r\n  const [favUsersList, setFavUsersList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFavUsersList(favUsers);\r\n  }, [favUsers]);\r\n\r\n  function removeFavorite(index) {\r\n    let newFavList = [...favUsersList];\r\n    newFavList.splice(index, 1);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(newFavList));\r\n    setFavUsersList(newFavList);\r\n  }\r\n\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.List>\r\n        {favUsersList.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onClick={() => removeFavorite(index)}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={true}>\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default FavoritesList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","\r\nimport React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport FavoritesList from \"components/FavoritesList\";\r\nimport { useFavPeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = () => {\r\n    \r\n  const {favUsers} = useFavPeopleFetch() \r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFavorites\r\n          </Text>\r\n           </S.Header>\r\n           <FavoritesList favUsers={favUsers} />\r\n       </S.Content>\r\n     </S.Home>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFavPeopleFetch = () => {\r\n\r\n  const [favUsers, setFavUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchFavUsers();\r\n  }, []);\r\n\r\n  async function fetchFavUsers() {\r\n    const response = await JSON.parse(localStorage.getItem('favorites'))||[];\r\n    setFavUsers(response);\r\n  }\r\n\r\n  return { favUsers,fetchFavUsers };\r\n\r\n};\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport { Link} from 'react-router-dom'\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} component={Link} to=\"/\"/>\r\n        <Tab label=\"Favorites\" index={1} component={Link} to=\"/favorites\"/>\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home,Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}